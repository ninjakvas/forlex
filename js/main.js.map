{"version":3,"sources":["functions.js","select2-dropdownPosition.js","main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["function slick_prev(name) {\n    if (name) {\n        return (\n            '<button type=\"button\" class=\"slick-prev\"><svg class=\"svgicon ' +\n            name +\n            '\"><use xlink:href=\"img/sprite.svg#' +\n            name +\n            '\"></use></svg></button>'\n        );\n    } else {\n        return '<button type=\"button\" class=\"slick-prev\"></button>';\n    }\n}\n\nfunction slick_next(name) {\n    if (name) {\n        return (\n            '<button type=\"button\" class=\"slick-next\"><svg class=\"svgicon ' +\n            name +\n            '\"><use xlink:href=\"img/sprite.svg#' +\n            name +\n            '\"></use></svg></button>'\n        );\n    } else {\n        return '<button type=\"button\" class=\"slick-next\"></button>';\n    }\n}\n\n// detect scrollbar width\nfunction scrollbar_measure() {\n    // Create the measurement node\n    let scrollDiv = document.createElement(\"div\");\n    scrollDiv.className = \"scrollbar-measure\";\n    document.body.appendChild(scrollDiv);\n\n    // Get the scrollbar width\n    let scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n    // Delete the DIV\n    document.body.removeChild(scrollDiv);\n\n    return scrollbarWidth;\n}\n\n// callbacks for magnificPopup to control fixed header\nlet mp_callbacks = {\n    open: function () {\n        if (scrollbar_measure() !== 0) {\n            $('#header').css('right', 15);\n        }\n    },\n    close: function () {\n        if (scrollbar_measure() !== 0) {\n            $('#header').removeAttr('style');\n        }\n    }\n};\n",";(function ($) {\n\n    var Defaults = $.fn.select2.amd.require('select2/defaults');\n\n    $.extend(Defaults.defaults, {\n        dropdownPosition: 'auto'\n    });\n\n    var AttachBody = $.fn.select2.amd.require('select2/dropdown/attachBody');\n\n    var _positionDropdown = AttachBody.prototype._positionDropdown;\n\n    AttachBody.prototype._positionDropdown = function () {\n\n        var $window = $(window);\n\n        var isCurrentlyAbove = this.$dropdown.hasClass('select2-dropdown--above');\n        var isCurrentlyBelow = this.$dropdown.hasClass('select2-dropdown--below');\n\n        var newDirection = null;\n\n        var offset = this.$container.offset();\n\n        offset.bottom = offset.top + this.$container.outerHeight(false);\n\n        var container = {\n            height: this.$container.outerHeight(false)\n        };\n\n        container.top = offset.top;\n        container.bottom = offset.top + container.height;\n\n        var dropdown = {\n            height: this.$dropdown.outerHeight(false)\n        };\n\n        var viewport = {\n            top: $window.scrollTop(),\n            bottom: $window.scrollTop() + $window.height()\n        };\n\n        var enoughRoomAbove = viewport.top < (offset.top - dropdown.height);\n        var enoughRoomBelow = viewport.bottom > (offset.bottom + dropdown.height);\n\n        var css = {\n            left: offset.left,\n            top: container.bottom\n        };\n\n        // Determine what the parent element is to use for calciulating the offset\n        var $offsetParent = this.$dropdownParent;\n\n        // For statically positoned elements, we need to get the element\n        // that is determining the offset\n        if ($offsetParent.css('position') === 'static') {\n            $offsetParent = $offsetParent.offsetParent();\n        }\n\n        var parentOffset = $offsetParent.offset();\n\n        css.top -= parentOffset.top;\n        css.left -= parentOffset.left;\n\n        var dropdownPositionOption = this.options.get('dropdownPosition');\n\n        if (dropdownPositionOption === 'above' || dropdownPositionOption === 'below') {\n\n            newDirection = dropdownPositionOption;\n\n        } else {\n\n            if (!isCurrentlyAbove && !isCurrentlyBelow) {\n                newDirection = 'below';\n            }\n\n            if (!enoughRoomBelow && enoughRoomAbove && !isCurrentlyAbove) {\n                newDirection = 'above';\n            } else if (!enoughRoomAbove && enoughRoomBelow && isCurrentlyAbove) {\n                newDirection = 'below';\n            }\n\n        }\n\n        if (newDirection == 'above' ||\n            (isCurrentlyAbove && newDirection !== 'below')) {\n            css.top = container.top - parentOffset.top - dropdown.height;\n        }\n\n        if (newDirection != null) {\n            this.$dropdown\n                .removeClass('select2-dropdown--below select2-dropdown--above')\n                .addClass('select2-dropdown--' + newDirection);\n            this.$container\n                .removeClass('select2-container--below select2-container--above')\n                .addClass('select2-container--' + newDirection);\n        }\n\n        this.$dropdownContainer.css(css);\n\n    };\n\n})(window.jQuery);","$(document).ready(function () {\n    svg4everybody();\n\n    $('#hero-slider').on('beforeChange', function (event, slick, currentSlide, nextSlide) {\n        const headerClass = $(slick.$slides[nextSlide]).find('.slide-bg--two').length ? 'white' : 'black';\n        const arrowColor = $(slick.$slides[nextSlide]).find('.slide-bg--one').length ? 'white' : 'black';\n        $('#header').removeClass().toggleClass(headerClass);\n        $('.slider-controls')\n            .removeClass()\n            .addClass('slider-controls')\n            .toggleClass(arrowColor);\n    }).slick({\n        prevArrow: slick_prev('arrow-left'),\n        nextArrow: slick_next('arrow-right'),\n        rows: 0,\n        autoplay: true,\n        speed: 800,\n        autoplaySpeed: 5000,\n        pauseOnHover: false,\n        dots: true,\n        fade: true,\n        appendArrows: $('.slider-controls .slick-arrows'),\n        appendDots: $('.slider-controls .slider-dots')\n    });\n\n    $('.hamburger').on('click', function () {\n        $(this).toggleClass('is-active');\n    });\n\n    // insert span inside button form hover effect\n    $('.button-1').wrapInner('<span></span>');\n\n    // select2 plugin\n    $('.select-1').select2({\n        dropdownPosition: 'below',\n        minimumResultsForSearch: Infinity,\n        theme: 'drp'\n    });\n\n    // select2 plugin\n    $('.select-2').select2({\n        dropdownPosition: 'below',\n        minimumResultsForSearch: Infinity,\n        theme: 'dd'\n    });\n\n    // magnific popup plugin\n    $('.open-modal').magnificPopup({\n        type: 'inline',\n        removalDelay: 300,\n        mainClass: 'mfp-zoom-in',\n        callbacks: mp_callbacks\n    });\n\n    // accordion\n    $('.accordion-item__title').on('click', function () {\n        if ($(this).hasClass('active')) {\n            $(this).removeClass('active');\n            $(this).next().slideUp();\n            return;\n        }\n        let items = $(this).parents('.accordion-group').find('.accordion-item');\n        items.find('.accordion-item__title').removeClass('active');\n        items.find('.accordion-item__body').slideUp();\n        $(this).addClass('active');\n        $(this).next().slideDown();\n    });\n\n    // form\n    $('.empty-check').each(function () {\n        let input = $(this).find('.form-item input');\n        let button = $(this).find('button[type=\"submit\"]');\n        let inputFilled = false;\n\n\n        input.on('keyup', function () {\n            input.each(function () {\n                inputFilled = $(this).val().length !== 0;\n            });\n            if (inputFilled) {\n                button.attr('disabled', false);\n            } else {\n                button.attr('disabled', 'disabled');\n            }\n        });\n    });\n\n    // tabs\n    $('.tabs').each(function () {\n        let tabContent = $(this).find('.tab-content');\n\n        $('.tabs__tab').on('click', function (e) {\n            e.preventDefault();\n            tabContent.removeClass('active');\n            $('.tabs__tab').removeClass('active');\n\n            $(this).addClass('active');\n            $($(this).attr('href')).addClass('active');\n        });\n    });\n\n    // show password\n    $('.password-item').on('click', '.toggle-icon', function () {\n        let icon = $(this);\n        let input = icon.parent().find('input');\n        let inputType = input.attr('type');\n\n        input\n            .attr('type', inputType === 'password' ? 'text' : 'password');\n        icon\n            .find('use')\n            .attr('xlink:href', 'img/sprite.svg#' + (inputType === 'text' ? 'eye-hide' : 'eye'));\n    });\n\n    // copy ref to clipboard\n    $('button.copy-ref').on('click', function () {\n        let copyText = document.getElementById('ref-input');\n        copyText.select();\n        copyText.setSelectionRange(0, 99999);\n        document.execCommand(\"copy\");\n    });\n\n\n    // add new input field\n    let fieldCounter = 1;\n    $('.add-field').on('click', function () {\n        let parent = $(this).parent();\n        let fieldName = parent.find('input').attr('name');\n        let number = fieldName + '-' + fieldCounter++;\n\n        parent.after('<div class=\"input-plus\">' +\n            '<input type=\"text\" class=\"form-input\" name=\"' + number + '\">' +\n            '<button type=\"button\" class=\"remove-field\">+</button>' +\n            '</div>');\n    });\n    $(document).on('click', '.remove-field', function () {\n        fieldCounter = 0;\n        $(this).parent().remove();\n    });\n\n    // call button\n    $(document).on('scroll', function () {\n        if ($(this).scrollTop() > $(window).outerHeight()) {\n            $('.call-pulse').addClass('visible');\n        } else {\n            $('.call-pulse').removeClass('visible');\n        }\n    });\n    $('.call-pulse__close').on('click', function () {\n        $(this).parent().remove();\n    });\n\n    // request form steps\n    $('#request-form').each(function () {\n        let form = $(this);\n        let next_button = form.find('.btn-change-step');\n\n        next_button.on('click', function () {\n            let id = $(this).data('stepid');\n            form.removeClass();\n            form.addClass('step-' + id);\n        });\n    });\n\n    // drop right select\n    $('.drop-right').each(function () {\n        let self = $(this);\n        let current = self.find('.drop-right__current');\n        let checked = self.find('input:checked').parent().text().trim();\n        let options = self.find('.drop-right__options');\n        let labels = self.find('label');\n        let paddingLeft = 75;\n        let paddingRight = 30;\n\n        // set initial value\n        current.text(checked);\n\n        // set on click value\n        self.find('label').on('click', function () {\n            current.text($(this).text().trim());\n            options.css('padding-left', 0).removeClass('active');\n            options.stop().animate({\n                width: '93px'\n            }, 100);\n        });\n\n        // handle hover\n        self.on('mouseenter', function () {\n            let width = labels.toArray().reduce((acc, item) => {\n                return acc + item.offsetWidth;\n            }, 0);\n            options.css('padding-left', paddingLeft).addClass('active');\n            options.stop().animate({\n                width: width + paddingLeft + paddingRight\n            }, 150);\n        });\n        self.on('mouseleave', function () {\n            options.css('padding-left', 0).removeClass('active');\n            options.stop().animate({\n                width: '93px'\n            }, 150);\n        });\n    });\n\n    // file upload\n    $('.upload-1').each(function () {\n        const self = $(this);\n        const input = self.find('input[type=\"file\"]');\n        const status = self.find('.upload-1__status');\n\n        input.on('change', function (e) {\n            const files = e.target.files;\n            if (files && files[0]) {\n                self.addClass('uploaded');\n                self.find('.filename').text(files[0].name);\n                status.text(status.data('text'));\n            }\n        });\n    });\n\n    // leaflet map\n    $.getJSON('js/world.geo.json', function (data) {\n        const countries = {\n            'Mexico': 'Мексика',\n            'United Kingdom': 'Вликобритания',\n            'Singapore': 'Сингапур',\n            'Estonia': 'Эстония',\n            'Gibraltar': 'Гибралтар',\n            'Sweden': 'Швейцария',\n            'Poland': 'Польша',\n            'Belize': 'Белиз',\n            'Bulgaria': 'Болгария',\n            'Hungary': 'Венгрия',\n            'Virgin Islands': 'Виргинские Острова',\n            'Hong Kong': 'Гонког',\n            'Georgia': 'Грузия',\n            'Dominicana': 'Доминикана',\n            'Ireland': 'Ирландия',\n            'Cayman Islands': 'Каймановы Острова',\n            'Cyprus': 'Кипр',\n            'Lithuania': 'Латвия',\n            'Malta': 'Мальта',\n            'Netherlands': 'Нидерланды',\n            'New Zealand': 'Новая Зеландия',\n            'Panama': 'Панама',\n            'Portugal': 'Португалия',\n            'Seychelles': 'Сейшелы',\n            'Slovakia': 'Словакия',\n            'United States': 'США',\n            'Czech Rep.': 'Чехия',\n        };\n        const map = L.map('map', {\n            center: [36.914764, 4.464844],\n            zoom: 2,\n            zoomControl: false,\n            dragging: false,\n            keyboard: false,\n            scrollWheelZoom: false,\n        });\n\n        const geojson = L.geoJson(data, {\n            style: {\n                stroke: true,\n                color: '#fff',\n                weight: 1,\n                fill: true,\n                fillColor: '#ddd',\n                fillOpacity: 1\n            },\n            onEachFeature: function (feature, layer) {\n                const name = feature.properties.name;\n                if (Object.keys(countries).includes(name)) {\n                    const loc_name = countries[name];\n                    $('.countries').append('<button value=\"' + name + '\" class=\"countries__item\">' + loc_name + '</button>');\n                }\n                layer._leaflet_id = name;\n            }\n        }).addTo(map);\n\n        $(document)\n            .on('mouseenter', '.countries__item', function (e) {\n                const layer = geojson.getLayer(e.target.value);\n                layer.setStyle({\n                    stroke: false,\n                    fill: true,\n                    fillColor: '#7747bc',\n                    fillOpacity: 1\n                });\n            })\n            .on('mouseout', function () {\n                geojson.resetStyle();\n            });\n\n    });\n});\n"]}